/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */
apply plugin: 'elasticsearch.java'

archivesBaseName = "log4j2-core-impl"

String log4jVersion = "2.17.1"
dependencies {
  implementation "org.apache.logging.log4j:log4j-api:${log4jVersion}"
  implementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"
}

tasks.named('forbiddenApisMain').configure {
  // log4j-api-es does not depend on server
  // TODO: Need to decide how we want to handle for forbidden signatures with the changes to core
  replaceSignatureFiles 'jdk-signatures'
}

tasks.named("dependencyLicenses").configure {
  mapping from: /log4j-.*/, to: 'log4j'
}

// not published, so no need for javadoc
tasks.named("javadoc").configure { enabled = false }


tasks.named("thirdPartyAudit").configure {
  ignoreMissingClasses(
    // from com.fasterxml.jackson.dataformat.yaml.YAMLMapper (jackson-dataformat-yaml)

    // from log4j
    'com.conversantmedia.util.concurrent.SpinPolicy',
    'com.fasterxml.jackson.core.JsonGenerator',
    'com.fasterxml.jackson.core.JsonParser',
    'com.fasterxml.jackson.core.JsonParser$Feature',
    'com.fasterxml.jackson.core.JsonToken',
    'com.fasterxml.jackson.core.PrettyPrinter',
    'com.fasterxml.jackson.core.type.TypeReference',
    'com.fasterxml.jackson.dataformat.yaml.YAMLMapper',
    'com.fasterxml.jackson.databind.ObjectMapper',
    'com.fasterxml.jackson.databind.SerializationFeature',
    'com.fasterxml.jackson.annotation.JsonInclude$Include',
    'com.fasterxml.jackson.databind.DeserializationContext',
    'com.fasterxml.jackson.databind.DeserializationFeature',
    'com.fasterxml.jackson.databind.JsonMappingException',
    'com.fasterxml.jackson.databind.JsonNode',
    'com.fasterxml.jackson.databind.Module$SetupContext',
    'com.fasterxml.jackson.databind.ObjectReader',
    'com.fasterxml.jackson.databind.ObjectWriter',
    'com.fasterxml.jackson.databind.SerializerProvider',
    'com.fasterxml.jackson.databind.deser.std.StdDeserializer',
    'com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer',
    'com.fasterxml.jackson.databind.module.SimpleModule',
    'com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter',
    'com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider',
    'com.fasterxml.jackson.databind.ser.std.StdScalarSerializer',
    'com.fasterxml.jackson.databind.ser.std.StdSerializer',
    'com.fasterxml.jackson.dataformat.xml.JacksonXmlModule',
    'com.fasterxml.jackson.dataformat.xml.XmlMapper',
    'com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter',
    'org.fusesource.jansi.Ansi',
    'org.fusesource.jansi.AnsiRenderer$Code',
    'com.lmax.disruptor.EventFactory',
    'com.lmax.disruptor.EventTranslator',
    'com.lmax.disruptor.EventTranslatorTwoArg',
    'com.lmax.disruptor.EventTranslatorVararg',
    'com.lmax.disruptor.ExceptionHandler',
    'com.lmax.disruptor.LifecycleAware',
    'com.lmax.disruptor.RingBuffer',
    'com.lmax.disruptor.Sequence',
    'com.lmax.disruptor.SequenceReportingEventHandler',
    'com.lmax.disruptor.WaitStrategy',
    'com.lmax.disruptor.dsl.Disruptor',
    'com.lmax.disruptor.dsl.ProducerType',
    'javax.jms.Connection',
    'javax.jms.ConnectionFactory',
    'javax.jms.Destination',
    'javax.jms.JMSException',
    'javax.jms.MapMessage',
    'javax.jms.Message',
    'javax.jms.MessageConsumer',
    'javax.jms.MessageProducer',
    'javax.jms.Session',
    'javax.mail.Authenticator',
    'javax.mail.Message$RecipientType',
    'javax.mail.PasswordAuthentication',
    'javax.mail.Session',
    'javax.mail.Transport',
    'javax.mail.internet.InternetAddress',
    'javax.mail.internet.InternetHeaders',
    'javax.mail.internet.MimeMessage',
    'javax.mail.internet.MimeMultipart',
    'javax.mail.internet.MimeUtility',
    'org.apache.commons.compress.compressors.CompressorStreamFactory',
    'org.apache.commons.compress.utils.IOUtils',
    'org.apache.commons.csv.CSVFormat',
    'org.apache.commons.csv.QuoteMode',
    'org.apache.kafka.clients.producer.Producer',
    'org.apache.kafka.clients.producer.RecordMetadata',
    'org.codehaus.stax2.XMLStreamWriter2',
    'org.jctools.queues.MpscArrayQueue',
    'org.osgi.framework.Bundle',
    'org.osgi.framework.BundleActivator',
    'org.osgi.framework.BundleContext',
    'org.osgi.framework.BundleEvent',
    'org.osgi.framework.BundleReference',
    'org.osgi.framework.FrameworkUtil',
    'org.osgi.framework.ServiceRegistration',
    'org.osgi.framework.SynchronousBundleListener',
    'org.osgi.framework.wiring.BundleWire',
    'org.osgi.framework.wiring.BundleWiring',
    'org.zeromq.ZMQ$Context',
    'org.zeromq.ZMQ$Socket',
    'org.zeromq.ZMQ',
  )
}
